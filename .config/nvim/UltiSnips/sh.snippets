snippet /^#!(.)$/ "shebang that determines correct shell" rbA
`!p snip.rv="#!/usr/bin/{}".format("bash" if match.group(1) == "b" else "sh")`

$0

endsnippet

snippet temp "Tempfile"
${1:TMPFILE}="$(mktemp -t ${3:--suffix=${4:.SUFFIX}} ${2:`!p
snip.rv = re.sub(r'[^a-zA-Z]', '_', snip.fn) or "untitled"
`}.XXXXXX)"
${5:${6/(.+)/trap "/}${6:rm -f '$${1/.*\s//}'}${6/(.+)/" 0 # EXIT\n/}${7/(.+)/trap "/}${7:rm -f '$${1/.*\s//}'; exit 1}${7/(.+)/" 2 # INT\n/}${8/(.+)/trap "/}${8:rm -f '$${1/.*\s//}'; exit 1}${8/(.+)/" 1 15 # HUP TERM\n/}}
endsnippet

snippet if "if" b
if [ ${1:condition} ]; then
	${0:${VISUAL:\:}}
fi

endsnippet

snippet ife "if-else" b
if [ ${1:condition} ]; then
	${0:${VISUAL:\:}}
else
	${2::}
fi

endsnippet

snippet ifee "if-elif-else" b
if [ ${1:condition} ]; then
	${0:${VISUAL:\:}}
elif [ ${2:condition} ]; then
	${3::}
else
	${4::}
fi

endsnippet

snippet iif "if (double brackets)" b
if [[ ${1:condition} ]]; then
	${0:${VISUAL:\:}}
fi

endsnippet

snippet iife "if-else (double brackets)" b
if [[ ${1:condition} ]]; then
	${0:${VISUAL:\:}}
else
	${2::}
fi

endsnippet

snippet iifee "if-elif-else (double brackets)" b
if [[ ${1:condition} ]]; then
	${0:${VISUAL:\:}}
elif [[ ${2:condition} ]]; then
	${3::}
else
	${4::}
fi

endsnippet

snippet eli "elif block" b
elif [ ${1:condition} ]; then
	${0:${VISUAL:\:}}

endsnippet

snippet eeli "elif block (double brackets)" b
elif [[ ${1:condition} ]]; then
	${0:${VISUAL:\:}}

endsnippet

snippet case "case..esac" bA
case "${1:var}" in
	${2:${VISUAL}}
esac

$0
endsnippet

